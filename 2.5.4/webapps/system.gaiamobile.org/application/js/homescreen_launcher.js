'use strict';(function(exports){var HomescreenLauncher=function(){};HomescreenLauncher.prototype={_currentManifestURL:'',_instance:undefined,_notificationStoreReady:false,_toProcess:false,_started:false,_ready:false,get ready(){return this._ready;},get origin(){return'homescreen';},get manifestURL(){return this._currentManifestURL;},_fetchSettings:function hl_fetchSettings(){var that=this;SettingsListener.observe('homescreen.manifestURL','',function onRetrievingHomescreenManifestURL(value){var previousManifestURL=that._currentManifestURL;that._currentManifestURL=value;if(typeof(that._instance)!=='undefined'){if(previousManifestURL!==''&&previousManifestURL!==that._currentManifestURL){that._instance.kill();that._instance=new HomescreenWindow(value);window.dispatchEvent(new CustomEvent('homescreen-changed'));}else{that._instance.ensure();}}
that._ready=true;window.dispatchEvent(new CustomEvent('homescreen-ready'));},{forceClose:true});},_onAppReady:function hl_onAppReady(){window.removeEventListener('applicationready',this._onAppReady);this._fetchSettings();},start:function hl_start(){if(this._started){return;}
this._started=true;if(applications.ready){this._fetchSettings();}else{window.addEventListener('applicationready',this._onAppReady.bind(this));}
window.addEventListener('appopening',this);window.addEventListener('iac-launchercomms',this);window.addEventListener('notification-update-launcher',this);window.addEventListener('notification-store-ready',this);},stop:function hl_stop(){if(typeof(this._instance)!=='undefined'){this._instance.kill();this._instance=undefined;}
this._currentManifestURL='';window.removeEventListener('appopening',this);window.removeEventListener('applicationready',this._onAppReady);window.removeEventListener('iac-launchercomms',this);window.removeEventListener('notification-update-launcher',this);window.removeEventListener('notification-store-ready',this);this._started=false;},getAllNotices:function hl_getAllNotices(detail){if(this._instance&&this._instance.element){let allNotices=Service.query('NotificationStore.getAll');let notices={};allNotices.forEach((notice)=>{const manifestURL=this.getManifestURL(notice);if(notices[manifestURL]){notices[manifestURL]++;}else{notices[manifestURL]=1;}});this.postResultMessage({notices:notices,screenLocked:Service.query('locked'),listUnread:Service.query('listUnread'),newNotice:this.getManifestURL(detail)});}},getManifestURL:function hl_getManifestURL(detail){if(!detail){return'';}
let{manifestURL}=detail;if(detail.appName==='System'&&detail.icon&&detail.icon.includes('voicemail.png')){manifestURL='voicemail';}else if(detail.isDownload){manifestURL='download';}else if(detail.icon&&detail.icon.includes('icon_bluetooth.png')){manifestURL='bluetooth';}else if(detail.id&&detail.id.indexOf('batteryFull')!==-1){manifestURL='battery';}
return manifestURL;},processComms:function hl_processComms(type){switch(type){case'get-all-notices':if(this._notificationStoreReady){this.getAllNotices();}else{this._toProcess=true;}
break;default:this.postResultMessage('Unknow type');break;}},postResultMessage:function hl_postResultMessage(result){let port=IACHandler.getPort('launchercomms');let info={result:result};port&&port.postMessage(info);},launchercomms:function hl_launchercomms(evt){if(evt.detail){this.processComms(evt.detail.type);}else{this.postResultMessage('Detail is null.');}},handleEvent:function hl_handleEvent(evt){switch(evt.type){case'appopening':if(evt.detail.rotatingDegree===90||evt.detail.rotatingDegree===270){this.getHomescreen().fadeOut();}
break;case'iac-launchercomms':this.launchercomms(evt);break;case'notification-update-launcher':this.getAllNotices(evt.detail);break;case'notification-store-ready':this._notificationStoreReady=true;if(this._toProcess){this._toProcess=false;this.getAllNotices();}
break;}},getHomescreen:function hl_getHomescreen(ensure){if(this._currentManifestURL===''){console.warn('HomescreenLauncher: not ready right now.');return null;}
if(typeof this._instance=='undefined'){this._instance=new HomescreenWindow(this._currentManifestURL);return this._instance;}else{if(ensure){this._instance.ensure();}
return this._instance;}}};exports.HomescreenLauncher=HomescreenLauncher;}(window));