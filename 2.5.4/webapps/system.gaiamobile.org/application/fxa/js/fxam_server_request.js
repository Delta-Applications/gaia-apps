'use strict';(function(exports){var pref='identity.fxaccounts.reset-password.url';var fxaSettingsHelper=SettingsHelper(pref);var fxaURL;fxaSettingsHelper.get(function on_fxa_get_settings(url){fxaURL=url;});var hostKey='identity.kaiaccounts.api.uri';var coreKey='identity.kaiaccounts.api.resources.core';var host='https://api.kaiostech.com';var core='/core/v2.0';var api='/accounts/password_reset';var resetPasswordInfo={};SettingsHelper(hostKey).get(function(url){if(!url){return;}
host=url;});SettingsHelper(coreKey).get(function(value){if(!value){return;}
core=value;});function _setAccountDetails(response){accountUtils.debug('account _setAccountDetails ');accountUtils.debug(response);if(response&&response.user&&(response.user.email||response.user.phoneNumber)){FxaModuleManager.setParam('done',true);FxaModuleManager.setParam('verified',response.user.verified);}}
function _ensureFxaClient(callback){LazyLoader.load('../js/fxa_client.js',function(){callback&&callback();});}
function _checkAccountDeleted(resp){if(resp&&resp.error&&resp.error==='ACCOUNT_DELETED'){_rightPasswordRetryRest();window.parent.FxAccountsUI.done({success:false,error:'ACCOUNT_DELETED'});return true;}
return false;}
var verifyRestPwdRsp=function verifyRestPwdRsp(resp){if(!resp||!resp.id||!resp.contact){return'UNKNOWN';}
if(!resp.methods||(Array.isArray(resp.methods)&&resp.methods.length===0)){return'NO_RETRIEVALE_METHOD';}
if(!Array.isArray(resp.methods)){resp.methods=[].contact(resp.methods);}
resetPasswordInfo=resp;return'VERIFIED';}
var FxModuleServerRequest={requestPhoneVerification:function(phone,uid,onsuccess,onerror){_ensureFxaClient(function(){window.parent.FxAccountsClient.requestPhoneVerification(phone,uid,onsuccess,onerror);});},resolvePhoneVerification:function(phone,uid,verificationId,code,onsuccess,onerror){_ensureFxaClient(function(){window.parent.FxAccountsClient.resolvePhoneVerification(phone,uid,verificationId,code,onsuccess,onerror);});},requestEmailVerification:function(email,uid,onsuccess,onerror){_ensureFxaClient(function(){function errorHandler(response){let deleted=_checkAccountDeleted(response);!deleted&&onerror&&onerror(response);}
window.parent.FxAccountsClient.requestEmailVerification(email,uid,onsuccess,errorHandler);});},checkEmailExistence:function fxmsr_checkEmailExistence(email,onsuccess,onerror){_ensureFxaClient(function(){window.parent.FxAccountsClient.checkEmailExistence(email,onsuccess,onerror);});},checkPhoneExistence:function fxmsr_checkPhoneExistence(phone,onsuccess,onerror){_ensureFxaClient(function(){window.parent.FxAccountsClient.checkPhoneExistence(phone,onsuccess,onerror);});},verifyPassword:function fxmsr_verifyPassword(password,onsuccess,onerror){function errorHandler(response){let deleted=_checkAccountDeleted(response);!deleted&&onerror&&onerror(response);}
_ensureFxaClient(function(){window.parent.FxAccountsClient.verifyPassword(password,onsuccess,errorHandler);});},signIn:function fxmsr_signIn(accountId,password,onsuccess,onerror){function successHandler(response){_setAccountDetails(response);var authenticated=(response&&response.user&&(response.user.verified||response.user.phoneVerified||response.user.emailVerified))||false;onsuccess&&onsuccess({authenticated:authenticated});}
function errorHandler(response){let deleted=_checkAccountDeleted(response);!deleted&&onerror&&onerror(response);}
_ensureFxaClient(function signIn(){window.parent.FxAccountsClient.signIn(accountId,password,successHandler,errorHandler);});},deleteAccount:function fxmsr_deleteAccount(onsuccess,onerror){_ensureFxaClient(function(){window.parent.FxAccountsClient.deleteAccount(onsuccess,onerror);});},logout:function fxmsr_logout(onsuccess,onerror){_ensureFxaClient(function(){window.parent.FxAccountsClient.logout(onsuccess,onerror);});},updateAccount:function fxmsr_updateAccount(phone,email,password,info,onsuccess,onerror){function successHandler(response){_setAccountDetails(response);onsuccess&&onsuccess(response);}
function errorHandler(response){let deleted=_checkAccountDeleted(response);!deleted&&onerror&&onerror(response);}
_ensureFxaClient(function updateAccount(){window.parent.FxAccountsClient.updateAccount(phone,email,password,info,successHandler,errorHandler);});},signUp:function fxmsr_signUp(phone,email,password,info,onsuccess,onerror){function successHandler(response){_setAccountDetails(response);onsuccess&&onsuccess(response);}
_ensureFxaClient(function signUp(){window.parent.FxAccountsClient.signUp(phone,email,password,info,successHandler,onerror);});},requestPasswordReset:function fxmsr_requestPasswordReset(email,onsuccess,onerror){var url=email?fxaURL+'?email='+email:fxaURL;var activity=new MozActivity({name:'view',data:{type:'url',url:url}});activity.onsuccess=function on_reset_success(){onsuccess&&onsuccess();FxaModuleManager.close();};activity.onerror=function on_reset_error(err){console.error(err);onerror&&onerror(err);};},resetPasswordInit:function fxmsr_resetPasswordInit(accountId,onsuccess,onerror){var extraParams={contact:accountId};extraParams.step=1;var reqMethod='POST';var errorHandler=function(resp){if((window.parent.FMDManager.isAntitheftLoggedIn&&resp.error==='ACCOUNT_DOES_NOT_EXIST')||resp.error==='ACCOUNT_NOT_FOUND'){window.parent.Service.request('SystemToaster:show',{textL10n:'account-deleted'});FxModuleServerRequest.logout(()=>{_rightPasswordRetryRest();window.parent.FxAccountsUI.done({success:false,error:'ACCOUNT_DELETED'});},()=>{accountUtils.debug('account logout onerror');});return;}
onerror&&onerror(resp);}
FxModuleServerRequest.resetPassword(extraParams,reqMethod,(resp)=>{var result=verifyRestPwdRsp(resp);if(result!=='VERIFIED'){onerror&&onerror({error:result});return;}
onsuccess&&onsuccess(resp.methods);},errorHandler);},resetPasswordMethodApply:function fxmsr_resetPasswordMethodApply(method,onsuccess,onerror){if(!resetPasswordInfo.id||!method||!Array.isArray(resetPasswordInfo.methods)||resetPasswordInfo.methods.length===0){onerror&&onerror({error:'UNKNOWN'});return;}
var extraParams={};extraParams.id=resetPasswordInfo.id;extraParams.method=method;extraParams.contact=resetPasswordInfo.contact;extraParams.step=2;resetPasswordInfo.method=method;var reqMethod='PUT';FxModuleServerRequest.resetPassword(extraParams,reqMethod,onsuccess,onerror);},resetPasswordPhoneValidate:function fxmsr_resetPasswordPhoneValidate(code,onsuccess,onerror){if(!resetPasswordInfo.id||!resetPasswordInfo.method||!code||!Array.isArray(resetPasswordInfo.methods)||resetPasswordInfo.methods.length===0){onerror&&onerror({error:'UNKNOWN'});return;}
var extraParams={};extraParams.id=resetPasswordInfo.id;extraParams.method=resetPasswordInfo.method;extraParams.contact=resetPasswordInfo.contact;extraParams.code=code;extraParams.step=3;var reqMethod='PUT';FxModuleServerRequest.resetPassword(extraParams,reqMethod,resp=>{if(!resp||(resp&&!resp.link)){onerror&&onerror({error:'UNKNOWN'});return;}
onsuccess&&onsuccess(resp.link);},onerror);},resetPasswordReq:function fxmsr_resetpassword(token,extraParams,reqMethod,onsuccess,onerror){if(navigator.connection&&navigator.connection.type!=='cellular'&&navigator.connection.type!=='wifi'){onerror&&onerror({error:'OFFLINE'});return;}
var id='';var step=1;var params={contact:extraParams.contact,}
if(extraParams&&extraParams.id){params.id=extraParams.id;id='/'+params.id;}
if(extraParams&&extraParams.method){params.method=extraParams.method;}
if(extraParams&&extraParams.code){params.code=extraParams.code;}
if(extraParams&&extraParams.step){step=extraParams.step;}
var method=reqMethod;var url=host+core+api+id;var requester=new window.parent.Requester();if(token&&token.kid&&token.macKey){requester.setHawkCredentials(token.kid,token.macKey);}
var payload={url:url,method:method,params:params};requester.send(payload).then(response=>{var obj=null;try{obj=JSON.parse(response)}catch(e){}
onsuccess&&onsuccess(obj);},response=>{if(response.status==400){if(step===1){onerror&&onerror({error:'NO_RETRIEVALE_METHOD'});}else{onerror&&onerror({error:'UNKNOWN'});}}else if(response.status==404){if(step===1){onerror&&onerror({error:'ACCOUNT_DOES_NOT_EXIST'});}else if(step===3){onerror&&onerror({error:'INVALID_VERIFICATION_CODE'});}else{onerror&&onerror({error:'UNKNOWN'});}}else if(response.status==424){onerror&&onerror({error:'UNVERIFIED_ACCOUNT'});}else{onerror&&onerror({error:'UNKNOWN'});}});},resetPassword:function fxmsr_resetPassword(extraParams,reqMethod,onsuccess,onerror){navigator.kaiAuth.getRestrictedToken('apps').then((credential)=>{FxModuleServerRequest.resetPasswordReq(credential,extraParams,reqMethod,onsuccess,onerror);}).catch((e)=>{accountUtils.debug("getRestrictedToken failed with status: "+e);FxModuleServerRequest.resetPasswordReq('',extraParams,reqMethod,onsuccess,onerror);});},changePassword:function fxmsr_changePassword(oldPassword,newPassword,onsuccess,onerror){function successHandler(response){_setAccountDetails(response);onsuccess&&onsuccess(response);}
function errorHandler(response){let deleted=_checkAccountDeleted(response);!deleted&&onerror&&onerror(response);}
NavigationMap.currentActivatedLength=1;_ensureFxaClient(function changePassword(){window.parent.FxAccountsClient.changePassword(oldPassword,newPassword,successHandler,errorHandler);});}};exports.FxModuleServerRequest=FxModuleServerRequest;}(window));