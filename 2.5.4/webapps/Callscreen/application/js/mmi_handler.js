'use strict';let MmiHandler=(function mmihandler(){let _=navigator.mozL10n.get;let conn=null;const CALL_BARRING_STATUS_MMI_CODE='*#33#';const CALL_WAITING_STATUS_MMI_CODE='*#43#';window.navigator.mozSetMessageHandler('ussd-received',onUssdReceived);function onUssdReceived(){CallScreen.closeConfirmDialog();}
function handleMmi(promise,sentMMI,serviceId){conn=navigator.mozMobileConnections&&navigator.mozMobileConnections[serviceId];promise.then(function(mmiResult){if(!mmiResult||!mmiResult.success){if(mmiResult&&!mmiResult.success&&mmiResult.statusMessage){showMessage('error',mmiResult.statusMessage);}else{showMessage('','GenericFailure');}
return;}
let title=mmiResult.serviceCode;let message=mmiResult.statusMessage;let additionalInformation=mmiResult.additionalInformation;switch(mmiResult.serviceCode){case'scCall':return;case'scUssd':if(!message){showLoading();return;}
break;case'scCallForwarding':if(!message){message='GenericFailure';}else if(additionalInformation){message=processCf(additionalInformation);}
break;case'scCallBarring':case'scCallWaiting':if(sentMMI===CALL_BARRING_STATUS_MMI_CODE||sentMMI===CALL_WAITING_STATUS_MMI_CODE){let additionalInfor=[];let msgCase={'smServiceEnabled':'ServiceIsEnabled','smServiceDisabled':'ServiceIsDisabled','smServiceEnabledFor':'ServiceIsEnabledFor'};if(additionalInformation&&'smServiceEnabledFor'===message&&Array.isArray(additionalInformation)){additionalInfor=additionalInformation.map(_);}
additionalInfor.unshift(_(msgCase[message])||message);message=additionalInfor.join('\n');}
break;default:break;}
showMessage(title,message);});}
function processCf(result){let inactive=_('call-forwarding-inactive');let voice=inactive;let data=inactive;let fax=inactive;let sms=inactive;let sync=inactive;let async=inactive;let packet=inactive;let pad=inactive;let cfReason=['unconditional','mobilebusy','noreply','notreachable'];let reason=cfReason[0];for(let i=0;i<result.length;i++){if(!result[i].active){continue;}
for(let serviceClassMask=1;serviceClassMask<=conn.ICC_SERVICE_CLASS_MAX;serviceClassMask<<=1){if((serviceClassMask&result[i].serviceClass)!==0){switch(serviceClassMask){case conn.ICC_SERVICE_CLASS_VOICE:voice=result[i].number;break;case conn.ICC_SERVICE_CLASS_DATA:data=result[i].number;break;case conn.ICC_SERVICE_CLASS_FAX:fax=result[i].number;break;case conn.ICC_SERVICE_CLASS_SMS:sms=result[i].number;break;case conn.ICC_SERVICE_CLASS_DATA_SYNC:sync=result[i].number;break;case conn.ICC_SERVICE_CLASS_DATA_ASYNC:async=result[i].number;break;case conn.ICC_SERVICE_CLASS_PACKET:packet=result[i].number;break;case conn.ICC_SERVICE_CLASS_PAD:pad=result[i].number;break;default:return _('call-forwarding-error');}}}
let index=0;index=result[i].reason;if(index>=0&&index<=3){reason=cfReason[index];}}
let msg=[_('call-forwarding-status'),_('call-forwarding-reason',{reason}),_('call-forwarding-voice',{voice}),_('call-forwarding-data',{data}),_('call-forwarding-fax',{fax}),_('call-forwarding-sms',{sms}),_('call-forwarding-sync',{sync}),_('call-forwarding-async',{async}),_('call-forwarding-packet',{packet}),_('call-forwarding-pad',{pad})].join('\n');return msg;}
function showMessage(title,message){if(!title&&!message){return;}
let dialogConfig={title:{text:_(title)||title,args:{}},body:{text:_(message)||message},accept:{name:'ok',l10nId:'ok',priority:2,callback:function(){}}};CallScreen.showConfirmDialog(dialogConfig);}
function showLoading(){let dialogConfig={body:{text:_('wait')},title:{text:''},otherClass:'is-loading',accept:{name:'ok',l10nId:'ok',priority:2,callback:function(){}}};CallScreen.showConfirmDialog(dialogConfig);}
return{handleMmi:handleMmi};})();