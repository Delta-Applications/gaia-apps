'use strict';var CallsHandler=(function callsHandler(){var CALLS_LIMIT=8;var CDMA_CALLS_LIMIT=2;var handledCalls=[];var exitCallScreenTimeout=null;const CALL_TYPE_VOICE_N_VIDEO=1;const CALL_TYPE_VT=4;var oldBrightnessValue=0.2;var brightnessTimer=null;var isBrightnessDimMode=false;const BRIGHTNESS_TIMEOUT=5000;var callInfoTimer=null;const CALLINFO_TIMEOUT=5000;const DIM_VALUE=0.115;var _=navigator.mozL10n.get;var toneInterval=null;var ringbackToneInterval=null;var callHeldByUser=null;var telephony=window.navigator.mozTelephony;var enableSpeaker=false;var isBTReceiverUsed=false;var showInfo=true;var lastSuppserviceCode='';var operateState={answer:false,hangUp:false,merge:false};var _flipManager=null;var fo=false;telephony.oncallschanged=onCallsChanged;telephony.onringbacktone=onRingbackTone;telephony.onsuppservicenotification=onsuppservicenotification;window.addEventListener('keydown',handleKeyEvent,true);window.addEventListener('visibilitychange',handleVisibilityChange);window.addEventListener('largetextenabledchanged',(event)=>{document.body.classList.toggle('large-text',navigator.largeTextEnabled);});document.body.classList.toggle('large-text',navigator.largeTextEnabled);navigator.getFlipManager().then((flipManager)=>{_flipManager=flipManager;flipManager.addEventListener('flipchange',onFlipChange);});var btHelper=new BluetoothHelper();var screenLock;var btConnectedState;var imsGroupRecords=[];function getImsRecord(){return imsGroupRecords;}
function insertImsRecord(number,name){var imsRecord={};imsRecord.number=number;imsRecord.name=name;imsGroupRecords.push(imsRecord);}
function setup(){if(telephony){telephony.muted=false;}
btHelper.getConnectedDevicesByProfile(btHelper.profiles.HFP,function(result){btConnectedState=!!(result&&result.length);isBTReceiverUsed=btConnectedState;CallScreen.setBTReceiverIcon(!!(result&&result.length));});btHelper.onhfpstatuschanged=function(evt){btConnectedState=evt.status;isBTReceiverUsed=btConnectedState;CallScreen.setBTReceiverIcon(evt.status);};var acm=navigator.mozAudioChannelManager;if(acm){acm.addEventListener('headphoneschange',function onheadphoneschange(){if(!CallsHandler.isAnyOpenCalls){return;}
if(acm.headphones){CallScreen.switchToDefaultOut(true);}else if(CallsHandler.enableSpeaker&&!btConnectedState){CallScreen.switchToSpeaker();}else{CallScreen.switchToDefaultOut();}});}
btHelper.onscostatuschanged=function onscostatuschanged(evt){btConnectedState=evt.status;if(evt.status){CallScreen.switchToDefaultOut();}else if(CallsHandler.enableSpeaker){CallScreen.switchToSpeaker();}};navigator.mozSetMessageHandler('bluetooth-dialer-command',handleBTCommand);navigator.mozSetMessageHandler('cdma-info-rec-received',cdmaCallConnected);navigator.mozSettings.addObserver('lockscreen.remote-lock',(evt)=>{if(!(evt.settingValue[0]===''&&evt.settingValue[1]==='')){hangUpAllCalls();}});if(telephony.calls.length||telephony.conferenceGroup.state!==''){onCallsChanged();}}
function hangUpAllCalls(){telephony.calls.forEach(function callIterator(call){call.hangUp();});if(telephony.conferenceGroup.calls.length||telephony.conferenceGroup.state!==''){endConferenceCall();}}
function onFlipChange(evt){var flipOpen=evt.currentTarget.flipOpened;var answerModeEnable=false;if(flipOpen){var lock=navigator.mozSettings.createLock();var answerModeSettings=lock.get('phone.answer.flipopen.enabled');answerModeSettings.onsuccess=function(){answerModeEnable=answerModeSettings.result['phone.answer.flipopen.enabled'];if(answerModeEnable){answer();}};if(telephony.active){console.log("call_handler","onFlipChange, setMicMode 0");SetMicMode(0);}
answerModeSettings.onerror=function(){console.error("An error occure when get the answermode");};}else{if(btConnectedState){if(telephony.active){console.log("call_handler","onFlipChange, setMicMode 1");SetMicMode(1);}
return;}
var acm=navigator.mozAudioChannelManager;if(acm&&acm.headphones){if(telephony.active){console.log("call_handler","onFlipChange, setMicMode 1");SetMicMode(1);}
return;}
hangUpAllCalls();}}
function SetMicMode(aMicMode){console.log("call_handler","SetMicMode, aMicMode is "+aMicMode);telephony.micMode=aMicMode;}
function isFlipOpend(){console.log('calls_handler isFlipOpend ');if(_flipManager){console.log(' calls_handler isFlipOpend _flipManager.flipOpened: '+_flipManager.flipOpened);return _flipManager.flipOpened;}else{console.log(' calls_handler isFlipOpend navigator.flipOpened: '+navigator.flipOpened);return navigator.flipOpened;}}
function initMicMode(){if(!isFlipOpend()){console.log(' initMicMode SetMicMode(1) filpstatus= '+isFlipOpend());SetMicMode(1);}else{console.log(' initMicMode SetMicMode(0) filpstatus= '+isFlipOpend());SetMicMode(0);}}
function cdmaCallConnected(message){if(message.lineControl){handledCalls[0].allowConnected();}}
var highPriorityWakeLock=null;function onCallsChanged(){CallScreen.showMainCallscreen();if(!highPriorityWakeLock&&telephony.calls.length>0){highPriorityWakeLock=navigator.requestWakeLock('high-priority');}
if(highPriorityWakeLock&&telephony.calls.length===0){highPriorityWakeLock.unlock();highPriorityWakeLock=null;}
if(telephony.active){telephony.active.addEventListener('error',handleBusyErrorAndPlayTone);}
telephony.calls.forEach(function callIterator(call){var alreadyAdded=handledCalls.some(function hcIterator(hc){return(hc.call==call);});if(!alreadyAdded){addCall(call);}});function hcIterator(call){return(call==hc.call);}
for(var index=(handledCalls.length-1);index>=0;index--){if(handledCalls[index].call.state==='disconnected'){removeCall(index);}}
if(telephony.calls.length===1&&telephony.conferenceGroup.calls.length===0){stopWaitingTone();}
if(cdmaCallWaiting()){CallScreenHelper.setState("connected_waiting");handleCallWaiting(telephony.calls[0]);}else{CallScreenHelper.setState();}
exitCallScreenIfNoCalls(CallScreen.callEndPromptTime);CallScreenHelper.render();}
function onRingbackTone(evt){if(evt.playRingbackTone){telephony.calls.some((call)=>{if(call.state==='dialing'||call.state==='alerting'){playRingbackTone(call);return true;}});}else{stopRingbackTone();}}
function playRingbackTone(call){if(ringbackToneInterval){return;}
var sequence=[[425,425,1000],[0,0,4000]];ringbackToneInterval=window.setInterval(()=>{TonePlayer.playSequence(sequence);},5200);TonePlayer.playSequence(sequence);call.addEventListener('statechange',function stateChange(){if(call.state==='dialing'||call.state==='alerting'){return;}
stopRingbackTone();call.removeEventListener('stateChange',stateChange);});}
function stopRingbackTone(){window.clearInterval(ringbackToneInterval);ringbackToneInterval=null;}
function onsuppservicenotification(evt){if(!evt||!evt.code){return;}
switch(evt.code){case'mt-call_on_hold':CallScreen.showToast('mt-call-on-hold');break;case'mt-call_retrieved':if(lastSuppserviceCode!=='mt-multi_party_call'){CallScreen.showToast('mt-call_retrieved');}
break;case'mt-multi_party_call':CallScreen.showToast('mt-multi_party_call');break;default:return;}
lastSuppserviceCode=evt.code;}
function unmute(){if(!telephony.muted){return;}
CallsHandler.toggleMute();OptionHelper.swapParams('inCallParams','Unmute','Mute',true);CallScreen.updateCallsMuteState();}
function offSpeaker(){if(telephony.speakerEnabled){CallsHandler.toggleSpeaker();OptionHelper.swapParams('inCallParams','Speaker-off','Speaker',true);}}
function getOldBrightnessValue(){return new Promise(resolve=>{var lock=navigator.mozSettings.createLock();var brightnessSetting=lock.get('screen.brightness');brightnessSetting.onsuccess=function(){oldBrightnessValue=brightnessSetting.result['screen.brightness'];resolve();};});}
function handleBrightnessTimer(isSetTimer){if(brightnessTimer){clearTimeout(brightnessTimer);}
if(isSetTimer){isSetTimer=!telephony.calls.some(function(call){return call.state!=='connected'&&call.state!=='held';});}
if(isSetTimer){brightnessTimer=setTimeout(()=>{handleBrightnessDim();},BRIGHTNESS_TIMEOUT);}}
function handleCallInfoTimer(isSetTimer){var videoCallState;if(telephony.calls.length===1){videoCallState=telephony.calls[0].videoCallState;}
if('TxEnabled'===videoCallState||!CallsHandler.isVideoCall()){return;}
if(callInfoTimer){clearTimeout(callInfoTimer);}
if(isSetTimer){callInfoTimer=setTimeout(()=>{if('connected'===telephony.calls[0].state&&showInfo&&CallsHandler.isVideoCall()){toggleShowInfo();handleCallInfoTimer(false);}},CALLINFO_TIMEOUT);}}
function handleBrightnessDim(){if(navigator.mozPower.screenEnabled){navigator.mozPower.screenBrightness=DIM_VALUE;isBrightnessDimMode=true;}}
function handleKeyEvent(){if(!navigator.mozPower.screenEnabled){return;}
if(isBrightnessDimMode){handleBrightnessRecover(true);}else{handleBrightnessTimer(true);}}
function handleVisibilityChange(){if(CallsHandler.isAnyOpenCalls){enableScreenDimFeature(!document.hidden);}}
function handleBrightnessRecover(isSetTimer){var settingObject={};settingObject['screen.brightness']=oldBrightnessValue;navigator.mozSettings.createLock().set(settingObject);if(isSetTimer){handleBrightnessTimer(true);}else{handleBrightnessTimer(false);}
isBrightnessDimMode=false;}
function addCall(call){var cdmaTypes=['evdo0','evdoa','evdob','1xrtt','is95a','is95b'];var type=window.navigator.mozMobileConnections[call.serviceId].voice.type;var cdmaOutingCalls=(handledCalls.length==0&&cdmaTypes.indexOf(type)!==-1&&call.state==='dialing');if(telephony.calls.length>CALLS_LIMIT){HandledCall(call);call.hangUp();return;}
if(telephony.calls.length===1&&!telephony.conferenceGroup.calls.length){resetToDefault();CallScreen.switchToDefaultOut(true);getOldBrightnessValue().then(()=>{handleBrightnessRecover(true);});}
var hc=new HandledCall(call);if(cdmaOutingCalls){hc.allowedConnected=false;}
handledCalls.push(hc);CallScreen.insertCall(hc.node);if(call.state==='incoming'||call.state==='dialing'||call.state==='alerting'){if(call.state==='incoming'){handleBrightnessRecover(true);turnScreenOn(call);}else{handleBrightnessTimer(true);}
call.addEventListener('statechange',function callStateChange(){if(telephony.calls.length&&(call.state==='incoming'||call.state==='dialing'||call.state==='alerting')){return;}
if((telephony.calls.length>=2||telephony.conferenceGroup.state)&&call.state==='connected'&&telephony.muted){unmute();}
call.removeEventListener('statechange',callStateChange);handleBrightnessTimer(true);});}
if((handledCalls.length>1)||((telephony.calls.length>=1)&&(telephony.conferenceGroup.calls.length))){if(call.state==='incoming'){if(CallsHandler.isVideoCall()||isRequestingVideoCall()||(isAnyEmergencyCall()&&!call.emergency)){end();}else{hc.hide();handleCallWaiting(call);}}else{hc.show();}}else{if(telephony.ownAudioChannel){telephony.ownAudioChannel();}}}
function conferenceCallEnd(){if(handledCalls.length!==1){return;}
CallScreen.incomingInfo.classList.add('ended');CallScreen.incomingNumberAdditionalTelType.textContent='';CallScreen.incomingNumberAdditionalTel.textContent=_('callEnded');CallScreen.hideIncoming();var remainingCall=handledCalls[0];if(remainingCall.call.state==='incoming'){remainingCall.show();setTimeout(function nextTick(){if(remainingCall.call.state=='incoming'){CallScreen.render('incoming');}});}}
function removeCall(index){handledCalls.splice(index,1);var length=handledCalls.length;var incoming=false;if(length){incoming=handledCalls.some((handleCall)=>{return handleCall.call.state==='incoming';});}
if(incoming&&(length>1||telephony.conferenceGroup.calls.length||telephony.conferenceGroup.state)){return;}
if(!incoming){CallScreen.incomingEnded();return;}
CallScreen.hideIncoming();handledCalls.forEach(function(handleCall){if(handleCall.call.state==='incoming'){handleCall.show();return;}});}
function turnScreenOn(call){CallScreen.lockScreenWake();call.addEventListener('statechange',function callStateChange(){if(telephony.calls.length&&telephony.calls[0].state==='incoming'){return;}
call.removeEventListener('statechange',callStateChange);CallScreen.unlockScreenWake();});}
function handleBusyErrorAndPlayTone(evt){if(evt.call!==undefined&&evt.call.error.name==='BusyError'){var sequence=[[480,620,500],[0,0,500],[480,620,500],[0,0,500],[480,620,500],[0,0,500]];var sequenceDuration=sequence.reduce(function(prev,curr){return prev+curr[2];},0);TonePlayer.playSequence(sequence);TonePlayer.setWaitingTime(sequenceDuration);}
dump("callsHandler evt.call.serviceId"+evt.call.serviceId);var conn=window.navigator.mozMobileConnections[evt.call.serviceId];var mccmnc=null;dump("callsHandler conn.voice.network.mcc:"+conn.voice.network.mcc);if(conn&&conn.voice&&conn.voice.network&&conn.voice.network.mcc){mccmnc=conn.voice.network.mcc+conn.voice.network.mnc;}
dump("callsHandler handleBusyErrorAndPlayTone mccmnc :"+mccmnc);if('732101'===mccmnc){handleCallError(evt);}}
function handleCallError(evt){dump("clear code:handleCallError");if(!evt||!evt.call){return;}
dump("clear code:error.name:"+evt.call.error.name);switch(evt.call.error.name){case'BadNumberError':dump("clear code 1:BadNumberError");CallScreen.showToast('call-bad-number-error');break;case'NoRouteToDestinationError':dump("clear code 3:NoRouteToDestinationError");CallScreen.showToast('call-no-route-to-destination-error');break;case'ChannelUnacceptableError':dump("clear code 6:ChannelUnacceptableError");CallScreen.showToast('call-channel-unacceptable-error');break;case'OperatorDeterminedBarringError':dump("clear code 8:OperatorDeterminedBarringError");CallScreen.showToast('call-operator-determined-barring-error');break;case'NormalCallClearingError':dump("clear code 16:NormalCallClearingError");CallScreen.showToast('call-normal-call-clearing-error');break;case'BusyError':dump("clear code 17:BusyError");CallScreen.showToast('call-busy-error');break;case'NoUserRespondingError':dump("clear code 18 :NoUserRespondingError ");CallScreen.showToast('call-no-user-responding-error');break;case'UserAlertingNoAnswerError':dump("clear code 19:UserAlertingNoAnswerError ");CallScreen.showToast('call-user-alerting-no-answer-error');break;case'CallRejectedError':dump("clear code 21:CallRejectedError");CallScreen.showToast('call-call-rejected-error');break;case'NumberChangedError':dump("clear code 22 :NumberChangedError");CallScreen.showToast('call-number-changed-error');break;case'PreEmptionError':dump("clear code 25 :PreEmptionError");CallScreen.showToast('call-pre-emption-error');break;case'DestinationOutOfOrderError':dump("clear code 27 :DestinationOutOfOrderError");CallScreen.showToast('call-destination-out-of-order-error');break;case'InvalidNumberFormatError':dump("clear code 28:InvalidNumberFormatError");CallScreen.showToast('call-invalid-number-format-error');break;case'FacilityRejectedError':dump("clear code 29 :FacilityRejectedError");CallScreen.showToast('call-facility-rejected-error');break;case'ResponseToStatusEnquiryError':dump("clear code 30 :ResponseToStatusEnquiryError");CallScreen.showToast('call-response-to-status-enquiry-error');break;case'UnspecifiedError':dump("clear code 31:UnspecifiedError");CallScreen.showToast('call-unspecified-error');break;case'CongestionError':dump("clear code 34 :CongestionError");CallScreen.showToast('call-congestion-error');break;case'NetworkOutOfOrderError':dump("clear code 38 :NetworkOutOfOrderError");CallScreen.showToast('call-network-out-of-order-error');break;case'NetworkTempFailureError':dump("clear code 41 :NetworkTempFailureError");CallScreen.showToast('call-network-temp-failure-error');break;case'SwitchingEquipCongestionError':dump("clear code 42 :SwitchingEquipCongestionError");CallScreen.showToast('call-switching-equip-congestion-error');break;case'AccessInfoDiscardedError':dump("clear code 43 :AccessInfoDiscardedError");CallScreen.showToast('call-access-info-discarded-error');break;case'RequestedChannelNotAvailableError':dump("clear code 44:RequestedChannelNotAvailableError");CallScreen.showToast('call-requested-channel-not-available-error');break;case'ResourceUnavailableError':dump("clear code 47:ResourceUnavailableError");CallScreen.showToast('call-resource-unavailable-error');break;case'QosUnavailableError':dump("clear code 49 :QosUnavailableError");CallScreen.showToast('call-qos-unavailable-error');break;case'RequestedFacilityNotSubscribedError':dump("clear code 50 :RequestedFacilityNotSubscribedError");CallScreen.showToast('call-requested-facility-not-subscribed-error');break;case'IncomingCallsBarredWithinCugError':dump("clear code 55 :IncomingCallsBarredWithinCugError");CallScreen.showToast('call-incoming-calls-barred-within-cug-error+');break;case'BearerCapabilityNotAuthorizedError':dump("clear code 57 :BearerCapabilityNotAuthorizedError");CallScreen.showToast('call-bearer-capability-not-authorized-error');break;case'BearerCapabilityNotAvailableError':dump("clear code 58 :BearerCapabilityNotAvailableError");CallScreen.showToast('call-bearer-capability-not-available-error');break;case'ServiceNotAvailableError':dump("clear code 63 :ServiceNotAvailableError");CallScreen.showToast('call-service-not-available-error');break;case'BearerNotImplementedError':dump("clear code 65 :BearerNotImplementedError");CallScreen.showToast('call-bearer-not-implemented-error');break;case'IncomingCallExceededError':dump("clear code 68 :IncomingCallExceededError");CallScreen.showToast('call-incoming-call-exceeded-error');break;case'RequestedFacilityNotImplementedError':dump("clear code 69 :RequestedFacilityNotImplementedError");CallScreen.showToast('call-requested-facility-not-implemented-error');break;case'UnrestrictedBearerNotAvailableError':dump("clear code 70 :UnrestrictedBearerNotAvailableError");CallScreen.showToast('call-unrestricted-bearer-not-available-error');break;case'ServiceNotImplementedError':dump("clear code 79 :ServiceNotImplementedError");CallScreen.showToast('call-service-not-implemented-error');break;case'InvalidTransactionIdError':dump("clear code 81 :InvalidTransactionIdError");CallScreen.showToast('call-invalid-transaction-id-error');break;case'NotCugMemberError':dump("clear code 87 :NotCugMemberError");CallScreen.showToast('call-not-cug-member-error');break;case'IncompatibleDestinationError':dump("clear code 88 :IncompatibleDestinationError");CallScreen.showToast('call-incompatible-destination-error');break;case'InvalidTransitNetworkSelectionError':dump("clear code 91 :InvalidTransitNetworkSelectionError");CallScreen.showToast('call-invalid-transit-network-selection-error');break;case'SemanticallyIncorrectMessageError':dump("clear code 95 :SemanticallyIncorrectMessageError");CallScreen.showToast('call-semantically-incorrect-message-error');break;case'InvalidMandatoryInfoError':dump("clear code 96 :InvalidMandatoryInfoError");CallScreen.showToast('call-invalid-mandatory-info-error');break;case'MessageTypeNotImplementedError':dump("clear code 97 :MessageTypeNotImplementedError");CallScreen.showToast('call-message-type-not-implemented-error');break;case'MessageTypeIncompatibleProtocolStateError':dump("clear code 98 :MessageTypeIncompatibleProtocolStateError");CallScreen.showToast('call-message-type-incompatible-protocol-state-error');break;case'InfoElementNotImplementedError':dump("clear code 99 :InfoElementNotImplementedError");CallScreen.showToast('call-info-element-not-implemented-error');break;case'ConditionalIeError':dump("clear code 100 :ConditionalIeError");CallScreen.showToast('call-conditionalIe-error');break;case'MessageIncompatibleProtocolStateError':dump("clear code 101 :MessageIncompatibleProtocolStateError");CallScreen.showToast('call-message-incompatible-protocol-state-error');break;case'RecoveryOnTimerExpiryError':dump("clear code 102 :RecoveryOnTimerExpiryError");CallScreen.showToast('call-recovery-on-timer-expiry-error');break;case'ProtocolError':dump("clear code 111 :ProtocolError");CallScreen.showToast('call-protocol-error');break;case'InterworkingError':dump("clear code 127 :InterworkingError");CallScreen.showToast('call-interworking-error');break;case'ServiceOptionNotSubscribedError':dump("clear code 33:ServiceOptionNotSubscribedError");CallScreen.showToast('call-service-option-not-subscribed-error');break;case'UnknownPDPAddressTypeError':dump("clear code:FacilityRejectedError");CallScreen.showToast('call-unknown-pdp-address-type-error');break;default:dump("other clear code ");CallScreen.showToast(evt.call.error.name);break;}}
function handleCallWaiting(call){var number=call.secondId?call.secondId.number:call.id.number;if(call.emergency){displayCallWaiting(call);}else{isBlockedNumber(number).then((isBlocked)=>{if(!isBlocked){if(CallScreen.isParentalControl()){Contacts.findByNumber(number,(contact)=>{if(contact){displayCallWaiting(call);}});}else{displayCallWaiting(call);}}});}}
function displayCallWaiting(call){var simNum=CallScreen.getSimNum(call);var statusIcon=CallScreen.incomingInfo.querySelector('.status-icon');if(simNum!==''){statusIcon.dataset.index=simNum;}else{delete statusIcon.dataset.index;}
if(CallsHandler.isVideoCall()){statusIcon.dataset.video='video-';}else{delete statusIcon.dataset.video;}
CallScreen.incomingStirChecked.classList.toggle('hide',call.verStatus!=='pass');CallScreen.incomingHdIcon.classList.toggle('hide',call.voiceQuality==='Normal');CallScreen.incomingInfo.classList.remove('ended');CallScreen.showIncoming();call.addEventListener('statechange',function callStateChange(){if(CallScreen.incomingContainer.classList.contains('displayed')&&call.state==='incoming'){CallScreen.incomingHdIcon.classList.toggle('hide',call.voiceQuality==='Normal');}else{CallScreen.incomingStirChecked.classList.add('hide');call.removeEventListener('statechange',callStateChange);}});playWaitingTone(call);var number=call.secondId?call.secondId.number:call.id.number;if(!number){CallScreen.incomingNumber.textContent=_('unknown');CallScreen.incomingNumberAdditionalTel.textContent='';return;}
const sdnContacts=SdnContacts.get();const contacts=sdnContacts[call.serviceId];if(contacts&&contacts.get(number)){CallScreen.incomingNumber.textContent=contacts.get(number);CallScreen.incomingNumberAdditionalTelType.textContent='';CallScreen.incomingNumberAdditionalTel.textContent=number;return;}
Contacts.findByNumber(number,function lookupContact(contact,matchingTel){var contactName=number;var contactNameExist=false;if(contact){if(contact.name&&contact.name.length&&contact.name[0]!==''){contactName=contact.name;contactNameExist=true;}else if(contact.org&&contact.org.length&&contact.org[0]!==''){contactName=contact.org;contactNameExist=true;}}
if(CallsHandler.setCNAPText(call,CallScreen.incomingNumberAdditionalTel,CallScreen.incomingNumber)){if(contactNameExist){CallScreen.incomingNumber.textContent=contactName;}}else if(contact&&contact.name){CallScreen.incomingInfo.classList.add('additionalInfo');CallScreen.incomingNumber.textContent=contactName;CallScreen.incomingNumberAdditionalTelType.textContent=Utils.getPhoneNumberAdditionalInfo(matchingTel);CallScreen.incomingNumberAdditionalTel.textContent=number;}else{CallScreen.incomingNumber.textContent=number;CallScreen.incomingNumberAdditionalTelType.textContent='';CallScreen.incomingNumberAdditionalTel.textContent=_('unknown');}});}
function exitCallScreenIfNoCalls(timeout){if(handledCalls.length===0&&!telephony.conferenceGroup.state){document.body.classList.toggle('no-handled-calls',true);CallScreenHelper.finalCallEndOption();CallsHandler.enableSpeaker=false;lastSuppserviceCode='';operateState={answer:false,hangUp:false,merge:false};if(exitCallScreenTimeout!==null){clearTimeout(exitCallScreenTimeout);exitCallScreenTimeout=null;}
exitCallScreenTimeout=setTimeout(function(evt){OptionHelper.softkeyPanel.hideMenu();CallRecording.showSpaceNoticeIfNeeded();Rtt.resetRtt();exitCallScreenTimeout=null;if(handledCalls.length===0){handleBrightnessRecover(false);var imsGroupRecords=getImsRecord();imsGroupRecords.splice(0,imsGroupRecords.length);CallScreen.resetWfcRemind();unmute();}else{document.body.classList.toggle('no-handled-calls',false);}},timeout);}}
function openLines(){return telephony.calls.length+
(telephony.conferenceGroup.calls.length?1:0);}
function handleBTCommand(message){var command=message.command;switch(command){case'CHUP':endActiveCall();break;case'ATA':answer();break;case'CHLD=0':hangupWaitingCalls();break;case'CHLD=1':if((handledCalls.length===1)&&!cdmaCallWaiting()||telephony.conferenceGroup.state&&!telephony.calls.length){end();}else{endAndAnswer();}
break;case'CHLD=2':if((openLines()===1)&&!cdmaCallWaiting()){holdOrResumeCallByUser();}else if(CallScreenHelper.getCall('incoming')){holdAndAnswer();}else{toggleCalls();}
break;case'CHLD=3':mergeCalls();break;default:var partialCommand=command.substring(0,3);if(partialCommand==='VTS'){DtmfHelper.press(command.substring(4));}
break;}}
function answer(option){if(!handledCalls.length){return;}
if((handledCalls.length>1)||cdmaCallWaiting()||telephony.conferenceGroup.calls.length){holdAndAnswer();return;}
stopAlerting();handleCall(handledCalls[0].call,'answer',option);}
function holdAndAnswer(){if(((handledCalls.length<2)&&(telephony.calls.length<2)&&!telephony.conferenceGroup.calls.length)&&!cdmaCallWaiting()){return;}
if(telephony.calls.length===3||(telephony.calls.length>=2&&telephony.conferenceGroup.calls.length)){endAndAnswer();return;}
if(telephony.active||handledCalls.length>=2||telephony.calls.length===1&&telephony.conferenceGroup.calls.length){var lastCall=handledCalls[handledCalls.length-1].call;handleCall(lastCall,'answer','voice');handleRttWaitingCallStateChange(lastCall);CallScreen.hideIncoming();}else{handledCalls[0].call.hold().then(()=>{CallScreen.hideIncoming();});}
if(cdmaCallWaiting()){btHelper.answerWaitingCall();CallScreenHelper.setState('connected_hold');CallScreenHelper.render();handledCalls[0].updateCallNumber();stopWaitingTone();}}
function endAndAnswer(){if((handledCalls.length<2)&&!cdmaCallWaiting()){return;}
if(telephony.active==telephony.conferenceGroup){endConferenceCall().then(function(){CallScreen.hideIncoming();},function(){});return;}
if(cdmaCallWaiting()){handledCalls[0].call.hold();stopWaitingTone();btHelper.answerWaitingCall();}else{var callToEnd=telephony.active||handledCalls[handledCalls.length-2].call;var callToAnswer;handledCalls.some(function(handledCall){if(handledCall.call.state=='incoming'){callToAnswer=handledCall.call;return true;}});if(callToEnd&&callToAnswer){callToEnd.addEventListener('disconnected',function ondisconnected(){callToEnd.removeEventListener('disconnected',ondisconnected);handleCall(callToAnswer,'answer');});handleCall(callToEnd,'hangUp');}else if(callToEnd){handleCall(callToEnd,'hangUp');}else if(callToAnswer){handleCall(callToAnswer,'answer');}}
CallScreen.hideIncoming();if(cdmaCallWaiting()){handledCalls[0].updateCallNumber();}}
function toggleCalls(){if(incomingCall()&&!cdmaCallWaiting()){return;}
if(openLines()<2&&!cdmaCallWaiting()){if(!telephony.active){holdOrResumeSingleCall();}
return;}
telephony.active.hold();btHelper.toggleCalls();callHeldByUser=null;}
function holdOrResumeCallByUser(){if(telephony.active){callHeldByUser=telephony.active;}
holdOrResumeSingleCall();}
function holdOrResumeSingleCall(){console.log('holdOrResumeSingleCall '+openLines()+' '
+telephony.calls.length);if(openLines()!==1||(telephony.calls.length&&(telephony.calls[0].state==='incoming'||!telephony.calls[0].switchable))){return;}
if(telephony.active){telephony.active.hold();}else{var line=telephony.calls.length?telephony.calls[0]:telephony.conferenceGroup;console.log('holdOrResumeSingleCall resume');line.resume();callHeldByUser=null;}}
function hangupWaitingCalls(){handledCalls.forEach(function(handledCall){var callState=handledCall.call.state;if(callState==='held'||(callState==='incoming'&&handledCalls.length>1)){handleCall(handledCall.call,'hangUp');}});}
function ignore(){if(cdmaCallWaiting()){CallScreenHelper.setState();stopWaitingTone();btHelper.ignoreWaitingCall();CallScreen.incomingEnded();}else{var ignoreIndex=handledCalls.length-1;var call=handledCalls[ignoreIndex].call;window.performance.mark('endIncoming-start');call.ondisconnected=()=>{window.performance.mark('endIncoming-end');window.performance.measure('performance-endIncoming','endIncoming-start','endIncoming-end');window.performance.clearMarks('endIncoming-start');window.performance.clearMarks('endIncoming-end');window.performance.clearMeasures('performance-endIncoming');};handleCall(call,'hangUp');}}
function endConferenceCall(){return telephony.conferenceGroup.hangUp().then(function(){ConferenceGroupHandler.signalConferenceEnded();},function(){console.error('Failed to hangup Conference Call');});}
function end(){if(incomingCall()){ignore();return;}
var callToEnd=null;if(telephony.active){callToEnd=telephony.active;}else{if(telephony.conferenceGroup.calls.length||telephony.conferenceGroup.state){callToEnd=telephony.conferenceGroup;}else{callToEnd=telephony.calls[0];}}
if(callToEnd.calls){endConferenceCall();}else{callToEnd.addEventListener('statechange',function callStateChange(){var state=callToEnd.state;if((state==='disconnected'||state==='')&&!telephony.active){holdOrResumeSingleCall();}
callToEnd.removeEventListener('statechange',callStateChange);});handleCall(callToEnd,'hangUp');}}
function endActiveCall(){let callToEnd=telephony.active;if(callToEnd){if(callToEnd.calls){endConferenceCall();}else{handleCall(callToEnd,'hangUp');callToEnd.addEventListener('statechange',function callStateChange(){let state=callToEnd.state;if((state==='disconnected'||state==='')&&!telephony.active){holdOrResumeSingleCall();}
callToEnd.removeEventListener('statechange',callStateChange);});}}else{end();}}
function switchToSpeaker(){btHelper.disconnectSco();if(!telephony.speakerEnabled){telephony.speakerEnabled=true;}}
function enableSpeakerForVT(){CallsHandler.enableSpeaker=true;if(!isBTReceiverUsed&&!navigator.mozAudioChannelManager.headphones){switchToSpeaker();}}
function switchToDefaultOut(doNotConnect){if(telephony.speakerEnabled){telephony.speakerEnabled=false;}
if(doNotConnect){btHelper.disconnectSco();}else{btHelper.connectSco();}}
function switchToReceiver(){btHelper.disconnectSco();if(telephony.speakerEnabled){telephony.speakerEnabled=false;}}
function toggleMute(){telephony.muted=!telephony.muted;}
function toggleSpeaker(){if(telephony.speakerEnabled){CallsHandler.switchToDefaultOut();}else{CallsHandler.switchToSpeaker();}}
function playWaitingTone(call){var sequence=[[440,440,100],[0,0,100],[440,440,100]];toneInterval=window.setInterval(function playTone(){TonePlayer.playSequence(sequence);},10000);TonePlayer.playSequence(sequence);call.addEventListener('statechange',function callStateChange(){if(call.state==='incoming'){return;}
call.removeEventListener('statechange',callStateChange);window.clearInterval(toneInterval);});}
function stopWaitingTone(){window.clearInterval(toneInterval);}
function activeCall(){var telephonyActiveCall=telephony.active;var active=null;for(var i=0;i<handledCalls.length;i++){var handledCall=handledCalls[i];if(telephonyActiveCall===handledCall.call){active=handledCall;break;}}
return active;}
function incomingCall(){var incoming=null;if(cdmaCallWaiting()){incoming=telephony.calls[0];}else{for(var i=0;i<handledCalls.length;i++){var handledCall=handledCalls[i];if('incoming'===handledCall.call.state){incoming=handledCall;break;}}}
return incoming;}
function canShowDtmfScreen(){if(CallScreenHelper.cdmaState==='connected_waiting'||CallScreenHelper.getCall('incoming')||CallsHandler.isVideoCall()||Rtt.isRttViewShown()){return false;}else{return telephony.active?true:false;}}
function activeCallForContactImage(){if(handledCalls.length===1){return handledCalls[0];}
return[activeCall()].concat(handledCalls).find(function(elem){return!elem||!elem.call.group;});}
function cdmaCallWaiting(){return((telephony.calls.length==1)&&(telephony.calls[0].state=='connected')&&(telephony.calls[0].secondId));}
function isFirstCallOnCdmaNetwork(){var cdmaTypes=['evdo0','evdoa','evdob','1xrtt','is95a','is95b'];if(handledCalls.length!==0){var ci=handledCalls[0].call.serviceId;var type=window.navigator.mozMobileConnections[ci].voice.type;return(cdmaTypes.indexOf(type)!==-1);}else{return false;}}
function isCdma3WayCall(){return isFirstCallOnCdmaNetwork()&&((telephony.calls.length===CDMA_CALLS_LIMIT)||(telephony.conferenceGroup.calls.length>0));}
function mergeCalls(){if(operateState.merge){return;}else{operateState.merge=true;}
if(ConferenceGroupUI.isImsconferenceGroup()){getConferenceStartTime();}
if(!telephony.conferenceGroup.calls.length&&telephony.calls.length===2){telephony.conferenceGroup.add(telephony.calls[0],telephony.calls[1]);}else if(telephony.conferenceGroup.state&&telephony.calls.length===1){telephony.conferenceGroup.add(telephony.calls[0]);}
callHeldByUser=null;}
function isEstablishingCall(){return telephony.calls.some(function(call){return call.state=='dialing'||call.state=='alerting';});}
function isAnyCallOnHold(){return telephony.calls.some(call=>call.state==='held')||(telephony.conferenceGroup&&telephony.conferenceGroup.state==='held');}
function isAnyCallSwitchable(){return telephony.calls.some(call=>call.switchable)||((telephony.conferenceGroup.calls.length>0)&&telephony.conferenceGroup.calls.every(call=>call.switchable));}
function isEveryCallMergeable(){return telephony.calls.every(call=>call.mergeable);}
function updatePlaceNewCall(){if(isEstablishingCall()){CallScreen.disablePlaceNewCallButton();}else{CallScreen.enablePlaceNewCallButton();}}
function getGroupDetailsText(){var text='';handledCalls.forEach(function(handleCall){if(handleCall.call.group){text+=handleCall.info;text+=', ';}});text=text.substring(0,text.length-2);if((text.split(', ')).length===telephony.conferenceGroup.calls.length){return text;}else{return getGroupDetailsTextForSrvcc();}}
function getGroupDetailsTextForSrvcc(){var calls=telephony.conferenceGroup.calls;var text='';calls.forEach(function(call){var name=matchNumber(call.id.number);if(name===null){return;}
text+=(name?name:call.id.number)+', ';});text=text.substring(0,text.length-2);return text;}
function getImsGroupDetailsText(){var text='';var calls=telephony.conferenceGroup.calls;var imsCallsItem=ConferenceGroupHandler.imsCallsItem;imsCallsItem.forEach((item,imsCall)=>{var exist=calls.some((call)=>{return(call===imsCall);});if(!exist){ConferenceGroupHandler.removeFromGroupDetails(item);imsCallsItem.delete(imsCall);}});calls.forEach(function(call){if(imsCallsItem.has(call)){text+=imsCallsItem.get(call).textContent+', ';return;}
var name=matchNumber(call.id.number);if(name===null){return;}
var item;text+=(name?name:call.id.number)+', ';item=ConferenceGroupHandler.addToImsGroupDetails(call.id.number,name);imsCallsItem.set(call,item);call.ondisconnected=()=>{if(!item.dataset.groupHangup){console.log('callshandle getImsGroupDetailsText hidden show leave group toast');}
ConferenceGroupHandler.removeFromGroupDetails(item);imsCallsItem.delete(call);};});text=text.substring(0,text.length-2);return text;}
function matchNumber(number){var findMatchNumber=false;var name='';var fuzzyName;for(var i=0;i<imsGroupRecords.length;i++){var record=imsGroupRecords[i];if(record.number===number){findMatchNumber=true;if(record.name!==''){name=record.name;break;}}else if(record.number.indexOf(number)!==-1||number.indexOf(record.number)!==-1){fuzzyName=record.name;}else{var recordNumberLength=record.number.length;var callNumberLength=number.length;if(recordNumberLength>=7&&callNumberLength>=7&&record.number.substr(recordNumberLength-7)===number.substr(callNumberLength-7)){fuzzyName=record.name;}}}
if(!findMatchNumber&&fuzzyName===undefined&&(number==='unavailable'||number.indexOf('anonymous')!==-1)){fuzzyName=_('unknown');}
if(!findMatchNumber&&fuzzyName===undefined){return null;}
if(!findMatchNumber&&fuzzyName!==undefined){name=fuzzyName;}
return name;}
function getConferenceStartTime(){var groupDuration=document.querySelector('#group-call > .duration');var conferenceStartTime=0;if(groupDuration.dataset.startTime===undefined){handledCalls.forEach(function(handleCall){var startTime=handleCall.getStartTime();if(conferenceStartTime===0||conferenceStartTime>startTime){conferenceStartTime=startTime;}});}else{conferenceStartTime=groupDuration.dataset.startTime;}
return conferenceStartTime;}
function clearConferenceStartTime(){var groupDuration=document.querySelector('#group-call > .duration');delete groupDuration.dataset.startTime;}
function setCNAPText(call,numberItem,nameItem){var name=call.id.name;if(name===''){return false;}
var number=call.id.number;var numberPresentation=call.id.numberPresentation;nameItem.textContent=name;switch(numberPresentation){case('allowed'):numberItem.textContent=number;break;case('restricted'):case('unknown'):numberItem.textContent=_('unknown');break;case('payphone'):numberItem.textContent=_('payphone');break;}
return true;}
function isIncomingNumberAllowed(){if(!handledCalls.length){return false;}
const{call}=handledCalls[handledCalls.length-1];return call.state==='incoming'&&call.id.numberPresentation==='allowed'&&!!call.id.number;}
function resetToDefault(){offSpeaker();CallScreen.hideDtmfNumber();btHelper.getConnectedDevicesByProfile(btHelper.profiles.HFP,function(result){btConnectedState=!!(result&&result.length);CallScreen.setBTReceiverIcon(btConnectedState);});}
function isInConferenceCall(number){var calls=telephony.conferenceGroup.calls;if(!calls.length){return false;}else{for(var i=0;i<calls.length;i++){if(calls[i].id.number===number){return true;}}
return false;}}
function changeCamera(){if(!VT.isCameraOn()){return;}
var videoCallProvider=telephony.calls[0].videoCallProvider;VT._hideStreams('local');videoCallProvider.setCamera();var type=VT.isCameraFront()?'rear':'front';VT._prepareLocalStreams(type).then((surface)=>{VT.localView.mozSrcObject=surface;VT.localAnchor.hidden=true;VT._showStreams('local');});}
function toggleCamera(){if(!isVideoCall()){return;}
var videoCallProvider=telephony.calls[0].videoCallProvider;if(VT.isCameraOn()){VT.setCameraOn(false);videoCallProvider.setCamera();VT._hideStreams('local');}else{var type=VT.isCameraFront()?'front':'rear';VT._prepareLocalStreams(type).then((surface)=>{VT.localView.mozSrcObject=surface;VT.localAnchor.hidden=true;VT._showStreams('local');});}}
function changeCallType(){if(CallsHandler.isVideoCall()){changeVideoCallState('bidirectional','audio-only');VT.requestVoice();}else{CallRecording.stopRec();var handledCallNode=document.getElementById('list-call');handledCallNode.querySelector('.local-video-view').classList.add('full');VT._showLocalAnchor(true);VT._prepareRemoteStreams().then((surface)=>{VT.remoteView.mozSrcObject=surface;VT.remoteAnchor.hidden=true;});changeVideoCallState('audio-only','bidirectional');CallScreenHelper.render();}}
function changeVideoCallState(origin,dest){var originState={};var desState={};var videoCallProvider=telephony.calls[0].videoCallProvider;originState.state=origin;originState.quality='default';desState.state=dest;desState.quality='default';videoCallProvider.sendSessionModifyRequest(originState,desState);}
function isVideoCall(){if(telephony.conferenceGroup.calls.length){return false;}
var videoCallState=telephony.calls[0].videoCallState;if(videoCallState&&(videoCallState==='TxEnabled'||videoCallState==='RxEnabled'||videoCallState==='Bidirectional'||videoCallState==='Paused')){console.log("calls_handler isVideoCall() = true");return true;}else{return false;}}
function isRequestingVideoCall(){if(handledCalls.length===2){return handledCalls[0].node.querySelector('.local-video-view').classList.contains('full');}
return false;}
function isSupportedVT(){if(telephony.conferenceGroup.calls.length){return false;}
var capabilities=telephony.calls[0].capabilities;if(capabilities.vtLocalBidirectional&&capabilities.vtRemoteBidirectional){return true;}else{return false;}}
function toggleShowInfo(hide){var handledCallNode=document.getElementById('list-call');var needHide=hide===undefined?showInfo:hide;if(needHide){handledCallNode.querySelector('#callsinfo').classList.add('hide');handledCallNode.querySelector('.status-icon').classList.add('hide');handledCallNode.querySelector('.duration').classList.add('hide');handledCallNode.querySelector('.local-video-view').classList.add('large');handledCallNode.querySelector('.local-video-anchor div').classList.add('large');showInfo=false;}else{handledCallNode.querySelector('#callsinfo').classList.remove('hide');handledCallNode.querySelector('.status-icon').classList.remove('hide');handledCallNode.querySelector('.duration').classList.remove('hide');handledCallNode.querySelector('.local-video-view').classList.remove('large');handledCallNode.querySelector('.local-video-anchor div').classList.remove('large');showInfo=true;}}
function handleCall(call,event,option){if(operateState[event]!==false){return;}
operateState[event]=true;call.addEventListener('statechange',handleStateChangeOrError);call.addEventListener('error',handleStateChangeOrError);if(event==='answer'){answerCall(call,option);}else{call[event]();}}
function answerCall(call,option){if(option==='voice'){call.answer(CALL_TYPE_VOICE_N_VIDEO,false);}else if(call.videoCallState==='Bidirectional'){call.answer(CALL_TYPE_VT,false);}else if(call.rttMode==='full'){call.answer(CALL_TYPE_VOICE_N_VIDEO,true);}else{call.answer(CALL_TYPE_VOICE_N_VIDEO,false);}}
function handleStateChangeOrError(evt){operateState.answer=false;operateState.hangUp=false;evt.call.removeEventListener('statechange',handleStateChangeOrError);evt.call.removeEventListener('error',handleStateChangeOrError);}
function getConnectedCall(){var connectedcall=telephony.calls.find((call)=>{if(call.state==='connected'){return call;}});return connectedcall;}
function isConnectedCallInRttMode(){var rttMode=false;var call=getConnectedCall();if(call&&call.rttMode==='full'){rttMode=true;}
return rttMode;}
function anyCallInRttMode(){return telephony.calls.some((call)=>{return call.rttMode==='full';});}
function isIncomingSupportedRtt(){var length=telephony.calls.length;if(length>0&&telephony.calls[length-1].state==='incoming'&&telephony.calls[length-1].capabilities&&telephony.calls[length-1].capabilities.supportRtt){return true;}else{return false;}}
function activeCallSupportRtt(){if(telephony.active&&telephony.active.capabilities&&telephony.active.capabilities.supportRtt){return true;}else{return false;}}
function enableScreenDimFeature(enable){handleBrightnessTimer(enable);}
function handleRttWaitingCallStateChange(call){if(!call||call.rttMode!=='full'){return;}
call.addEventListener('statechange',function showToast(){if(call.state==='incoming'&&call.rttMode==='full'){return;}
if(call.state==='connected'&&call.rttMode==='off'){CallScreen.showToast('voice-only-call');}
call.removeEventListener('statechange',showToast);});}
function dial(number){var sanitizedNumber=number.replace(/(\s|-|\.|\(|\))/g,'');var validExp=/^(?!,)([0-9#+*,]){1,50}$/;if(!validExp.test(sanitizedNumber)){CallScreen.handleCallError('BadNumber');return;}
var serviceId=CallsHandler.serviceId;if(CallScreen.isParentalControl()){canDial(sanitizedNumber,serviceId).then((allowed)=>{if(allowed){makeCall(sanitizedNumber,serviceId);}else{CallScreen.handleCallError('NumberBlocked');}});}else{makeCall(sanitizedNumber,serviceId);}}
function makeCall(sanitizedNumber,serviceId){const number=getNumberAsDtmfToneGroups(sanitizedNumber)[0];var callPromise=window.navigator.mozTelephony.dial(number,1,false,serviceId);callPromise.then((obj)=>{if(obj instanceof TelephonyCall){const dtmfToneGroups=getNumberAsDtmfToneGroups(sanitizedNumber);if(dtmfToneGroups.length>1){obj.addEventListener('connected',function dtmfToneGroupPlayer(){obj.removeEventListener('connected',dtmfToneGroupPlayer);playDtmfToneGroups(dtmfToneGroups,serviceId);});}}else{MmiHandler.handleMmi(obj.result,number,serviceId);}}).catch((errorName)=>{CallScreen.handleCallError(errorName,number);});}
function getNumberAsDtmfToneGroups(number){return number.split(',');}
function playDtmfToneGroups(dtmfToneGroups,serviceId){dtmfToneGroups=dtmfToneGroups.slice(1);let goupsLength=dtmfToneGroups.length;let lastCommaIndex=goupsLength-1;while(''===dtmfToneGroups[lastCommaIndex]){lastCommaIndex-=1;}
lastCommaIndex+=1;dtmfToneGroups=dtmfToneGroups.slice(0,lastCommaIndex);goupsLength=dtmfToneGroups.length;let promise=Promise.resolve();let counter=0;let pauses;while(counter<goupsLength){pauses=1;while(''===dtmfToneGroups[counter]){pauses+=1;counter+=1;}
promise=promise.then(playDtmfToneGroup(dtmfToneGroups[counter],pauses,serviceId));counter+=1;}
return promise;}
function playDtmfToneGroup(toneGroup,pauses,serviceId){return navigator.mozTelephony.sendTones(toneGroup,3000*pauses,null,serviceId);}
function isBlockedNumber(number){var options={filterBy:['number'],filterValue:number,filterOp:'fuzzyMatch'};return navigator.mozContacts.findBlockedNumbers(options).then((contacts)=>{return!!(contacts&&contacts.length);});}
function isEmergencyNumber(number,serviceId){return telephony.getEccList(serviceId).then((eccList)=>{var list=eccList.split(',');return list.includes(number);});}
function canDial(number,serviceId){return new Promise(resolve=>{if(number.length<3||number[number.length-1]==='#'){resolve(true);}else{isEmergencyNumber(number,serviceId).then((emergency)=>{if(emergency){resolve(true);}else{isBlockedNumber(number).then((blocked)=>{if(blocked){resolve(false);}else{Contacts.findByNumber(number,(contact)=>{resolve(!!contact);});}});}});}});}
function stopAlerting(){navigator.mozApps.getSelf().onsuccess=(evt)=>{let app=evt.target.result;app.connect('callscreencomms').then((ports)=>{let options={type:'stop-alerting'};ports.forEach(function(port){port.postMessage(options);});},(reason)=>{console.log('callscreen: callscreencomms is rejected:'+reason);});}}
function replyMessage(text){let incoming=incomingCall();if(incoming.call){let call=incoming.call;if(navigator.mozMobileMessage){let request=navigator.mozMobileMessage.send(call.id.number,text,{serviceId:call.serviceId});request.onsuccess=()=>{let message=_('reply-to-name',{name:incoming.info});CallScreen.showToast(null,null,message);};}}}
function isAnyEmergencyCall(){return handledCalls.some(hc=>hc.call.emergency===true);}
return{setup:setup,answer:answer,holdAndAnswer:holdAndAnswer,endAndAnswer:endAndAnswer,toggleCalls:toggleCalls,ignore:ignore,end:end,toggleMute:toggleMute,toggleSpeaker:toggleSpeaker,switchToReceiver:switchToReceiver,switchToSpeaker:switchToSpeaker,switchToDefaultOut:switchToDefaultOut,holdOrResumeCallByUser:holdOrResumeCallByUser,checkCalls:onCallsChanged,mergeCalls:mergeCalls,SetMicMode:SetMicMode,isFlipOpend:isFlipOpend,initMicMode:initMicMode,exitCallScreenIfNoCalls:exitCallScreenIfNoCalls,getGroupDetailsText:getGroupDetailsText,conferenceCallEnd:conferenceCallEnd,getConferenceStartTime:getConferenceStartTime,clearConferenceStartTime:clearConferenceStartTime,setCNAPText:setCNAPText,getImsGroupDetailsText:getImsGroupDetailsText,insertImsRecord:insertImsRecord,getImsRecord:getImsRecord,isInConferenceCall:isInConferenceCall,changeCamera:changeCamera,toggleCamera:toggleCamera,changeVideoCallState:changeVideoCallState,isVideoCall:isVideoCall,isSupportedVT:isSupportedVT,changeCallType:changeCallType,toggleShowInfo:toggleShowInfo,handleCallInfoTimer:handleCallInfoTimer,enableSpeakerForVT:enableSpeakerForVT,getConnectedCall:getConnectedCall,enableScreenDimFeature:enableScreenDimFeature,anyCallInRttMode:anyCallInRttMode,isIncomingNumberAllowed:isIncomingNumberAllowed,isIncomingSupportedRtt:isIncomingSupportedRtt,activeCallSupportRtt:activeCallSupportRtt,dial:dial,openLines:openLines,replyMessage:replyMessage,get activeCall(){return activeCall();},get incomingCall(){return incomingCall();},get canShowDtmfScreen(){return canShowDtmfScreen();},get activeCallForContactImage(){return activeCallForContactImage();},get isAnyOpenCalls(){return handledCalls.length>0||telephony.conferenceGroup.state!=='';},get isAnyConnectedCall(){return!!(telephony.active&&telephony.active.state==='connected');},get serviceId(){var activeCallServiceId=0;if(telephony.calls.length){activeCallServiceId=telephony.calls[0].serviceId;}else if(telephony.conferenceGroup.calls.length){activeCallServiceId=telephony.conferenceGroup.calls[0].serviceId;}
return activeCallServiceId;},get imsRegState(){var imsHandler=navigator.mozMobileConnections[CallsHandler.serviceId].imsHandler;if(imsHandler)
return imsHandler.capability;else
return null;},get isBtConnected(){return btConnectedState;},get isMute(){return telephony.muted;},get isSpeakerEnabled(){return telephony.speakerEnabled;},get isBTReceiverUsed(){return isBTReceiverUsed;},get isConferenceConnected(){return telephony.conferenceGroup.state==='connected';},get isConnectedCallInRttMode(){return isConnectedCallInRttMode();},set isMergeRequsted(value){operateState.merge=value;},get isShowInfo(){return showInfo;},set isShowInfo(status){showInfo=status;},get handledCalls(){return handledCalls;},isAnyEmergencyCall,isFirstCallOnCdmaNetwork:isFirstCallOnCdmaNetwork};})();